{"version":3,"sources":["Todo.js","CreateNewTodo.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","state","trashIsWarning","isEditing","todoValue","task","backButtonLit","handleDelete","bind","shadeRed","shadeBlue","toggleEditMode","handleSubmitChange","handleChange","shadeGreen","shadeNotGreen","handleSwitch","this","toggleCompleted","id","completed","setState","evnt","st","target","value","event","preventDefault","alterTodo","delete","Grid","marginTop","marginBottom","container","justifyContent","spacing","direction","alignItems","Box","sx","display","flexDirection","xs","md","width","lg","xl","pt","pb","pl","pr","border","borderRadius","borderColor","Container","Input","name","onChange","paddingTop","textDecoration","hover","color","onMouseEnter","onMouseLeave","onClick","paddingBottom","paddingLeft","fontSize","Switch","size","checked","inputProps","Component","CreateNewTodo","useState","setTodoValue","TextField","label","Button","addTodo","variant","TodoList","todos","JSON","parse","window","localStorage","getItem","deleteThisTodo","isCompleted","currState","map","todo","newContent","console","log","t","filter","todoContent","newTodo","uuid","alert","setItem","stringify","mappedTodos","React","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96da6e03.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Grid, Box, Container, Input, Switch } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trashIsWarning: false,\n      isEditing: false,\n      todoValue: this.props.task,\n      backButtonLit: false,\n    };\n    this.handleDelete = this.handleDelete.bind(this);\n    this.shadeRed = this.shadeRed.bind(this);\n    this.shadeBlue = this.shadeBlue.bind(this);\n    this.toggleEditMode = this.toggleEditMode.bind(this);\n    this.handleSubmitChange = this.handleSubmitChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.shadeGreen = this.shadeGreen.bind(this);\n    this.shadeNotGreen = this.shadeNotGreen.bind(this);\n    this.handleSwitch = this.handleSwitch.bind(this);\n  }\n  handleSwitch() {\n    this.props.toggleCompleted(this.props.id, this.props.completed);\n  }\n  shadeNotGreen() {\n    this.setState({ backButtonLit: false });\n  }\n  shadeGreen() {\n    this.setState({ backButtonLit: true });\n  }\n  handleChange(evnt) {\n    this.setState((st) => ({\n      todoValue: evnt.target.value,\n    }));\n  }\n  handleSubmitChange(event) {\n    event.preventDefault();\n    this.props.alterTodo(this.props.id, this.state.todoValue);\n    this.setState({ isEditing: false });\n  }\n  toggleEditMode() {\n    this.setState((st) => ({\n      isEditing: !st.isEditing,\n    }));\n  }\n  shadeBlue() {\n    this.setState({ trashIsWarning: false });\n  }\n  shadeRed() {\n    this.setState({ trashIsWarning: true });\n  }\n  handleDelete() {\n    this.props.delete(this.props.id);\n  }\n  render() {\n    return (\n      <Grid\n        marginTop=\"18px\"\n        marginBottom=\"11px\"\n        container\n        justifyContent=\"flex-end\"\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n\n        // justifyContent=\"center\"\n        // style={{ minHeight: \"100vh\" }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: { xs: \"column\", md: \"row\" },\n            alignItems: \"center\",\n          }}\n        >\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n\n              width: {\n                md: 300, // theme.breakpoints.up('md')\n                lg: 400, // theme.breakpoints.up('lg')\n                xl: 500, // theme.breakpoints.up('xl')\n              },\n              pt: 1,\n              pb: 1,\n              pl: 1,\n              pr: 1,\n              border: 0.5,\n              borderRadius: 3,\n              borderColor: \"blueviolet\",\n            }}\n          >\n            <Container\n              sx={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              {!this.state.isEditing ? (\n                <Grid\n                  sx={\n                    ({ paddingTop: 0.5 },\n                    this.props.completed\n                      ? { textDecoration: \"line-through\" }\n                      : \"\")\n                  }\n                >\n                  {this.props.task}\n                </Grid>\n              ) : (\n                <form>\n                  <Input\n                    value={this.state.todoValue}\n                    name=\"change\"\n                    onChange={this.handleChange}\n                    sx={{ paddingTop: 0.5 }}\n                  ></Input>\n                </form>\n              )}\n\n              {!this.state.isEditing ? (\n                <Grid\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}\n                  hover\n                >\n                  <DeleteIcon\n                    color={this.state.trashIsWarning ? \"error\" : \"secondary\"}\n                    onMouseEnter={this.shadeRed}\n                    onMouseLeave={this.shadeBlue}\n                    onClick={this.handleDelete}\n                  />\n                  <EditIcon\n                    sx={{ paddingBottom: 0.25, paddingLeft: 1.5 }}\n                    fontSize=\"inherit\"\n                    color=\"primary\"\n                    onClick={this.toggleEditMode}\n                  />\n                  <Switch\n                    size=\"small\"\n                    checked={this.props.completed}\n                    onChange={this.handleSwitch}\n                    inputProps={{ \"aria-label\": \"controlled\" }}\n                  />\n                </Grid>\n              ) : (\n                <Grid>\n                  <Grid hover>\n                    <ArrowBackIcon\n                      color={this.state.backButtonLit ? \"success\" : \"\"}\n                      onMouseEnter={this.shadeGreen}\n                      onMouseLeave={this.shadeNotGreen}\n                      onClick={this.toggleEditMode}\n                    />\n                  </Grid>\n                  <Grid hover>\n                    <ArrowForwardIcon\n                      sx={{ paddingTop: 1.4 }}\n                      color={this.state.trashIsWarning ? \"error\" : \"seagreen\"}\n                      onMouseEnter={this.shadeRed}\n                      onMouseLeave={this.shadeBlue}\n                      onClick={this.handleSubmitChange}\n                    />\n                  </Grid>\n                </Grid>\n              )}\n            </Container>\n          </Box>\n        </Box>\n      </Grid>\n    );\n  }\n}\nexport default Todo;\n","import * as React from \"react\";\nimport { useState } from \"react\";\n\nimport { Grid, TextField, Button } from \"@mui/material\";\n\nexport default function CreateNewTodo(props) {\n  const [todoValue, setTodoValue] = useState(\"\");\n  const handleChange = (evnt) => {\n    setTodoValue(evnt.target.value);\n  };\n\n  const handleSubmit = (evnt) => {\n    evnt.preventDefault();\n    props.addTodo(props.id, todoValue);\n    setTodoValue(\"\");\n  };\n  return (\n    <div>\n      <Grid\n        marginTop=\"30px\"\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        // justifyContent=\"center\"\n        // style={{ minHeight: \"100vh\" }}\n      >\n        <form>\n          <TextField\n            onChange={handleChange}\n            value={todoValue}\n            id=\"standard-basic\"\n            label=\"Create a to-do\"\n            color=\"secondary\"\n          />\n        </form>\n        <Button sx={{ marginTop: 1 }} onClick={handleSubmit} variant=\"outlined\">\n          Submit\n        </Button>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Todo from \"./Todo\";\nimport CreateNewTodo from \"./CreateNewTodo\";\nimport { v4 as uuid } from \"uuid\";\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: JSON.parse(window.localStorage.getItem(\"todos\") || \"[]\"),\n    };\n    this.addTodo = this.addTodo.bind(this);\n    this.deleteThisTodo = this.deleteThisTodo.bind(this);\n    this.alterTodo = this.alterTodo.bind(this);\n    this.toggleCompleted = this.toggleCompleted.bind(this);\n  }\n  toggleCompleted(id, isCompleted) {\n    this.setState((currState) => ({\n      todos: currState.todos.map((todo) => {\n        if (todo.id === id) {\n          return { ...todo, completed: !isCompleted };\n        }\n        return todo;\n      }),\n    }));\n  }\n  alterTodo(id, newContent) {\n    console.log(id, newContent);\n    this.setState((currState) => ({\n      todos: this.state.todos.map((t) => {\n        if (t.id === id) {\n          return { ...t, task: newContent };\n        }\n        return t;\n      }),\n    }));\n  }\n  deleteThisTodo(id) {\n    this.setState((currState) => ({\n      todos: currState.todos.filter((todo) => todo.id !== id),\n    }));\n  }\n  addTodo(id, todoContent) {\n    if (!todoContent) {\n      alert(\"you must have something in your todo in order to submit\");\n    } else {\n      const newTodo = { task: todoContent, id: uuid(), completed: false };\n      this.setState((currState) => ({\n        todos: [...currState.todos, newTodo],\n      }));\n    }\n  }\n  componentDidUpdate() {\n    window.localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\n  }\n  componentDidMount() {\n    console.log(\"mounted the component\");\n  }\n  render() {\n    let mappedTodos = this.state.todos.map((todo) => (\n      <Todo\n        delete={this.deleteThisTodo}\n        key={todo.id}\n        id={todo.id}\n        task={todo.task}\n        completed={todo.completed}\n        toggleCompleted={this.toggleCompleted}\n        alterTodo={this.alterTodo}\n      />\n    ));\n    return (\n      <div>\n        <CreateNewTodo addTodo={this.addTodo} />\n        {mappedTodos}\n      </div>\n    );\n  }\n}\nexport default TodoList;\n","import * as React from \"react\";\n\nimport TodoList from \"./TodoList\";\n\nfunction App() {\n  return (\n    <div>\n      <TodoList />\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}