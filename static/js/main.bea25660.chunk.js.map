{"version":3,"sources":["Todo.js","CreateNewTodo.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","state","trashIsWarning","isEditing","todoValue","task","backButtonLit","handleDelete","bind","shadeRed","shadeBlue","toggleEditMode","handleSubmitChange","handleChange","shadeGreen","shadeNotGreen","this","setState","evnt","st","target","value","alterTodo","id","delete","Grid","marginTop","marginBottom","container","justifyContent","spacing","direction","alignItems","Box","sx","display","flexDirection","xs","md","width","lg","xl","pt","pb","pl","pr","border","borderRadius","borderColor","Container","Input","name","onChange","paddingTop","hover","color","onMouseEnter","onMouseLeave","onClick","paddingBottom","paddingLeft","fontSize","Component","CreateNewTodo","useState","setTodoValue","TextField","label","Button","preventDefault","addTodo","variant","TodoList","todos","JSON","parse","window","localStorage","getItem","deleteThisTodo","newContent","console","log","currState","map","t","filter","todo","todoContent","newTodo","uuid","completed","alert","setItem","stringify","mappedTodos","React","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bea25660.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Grid, Box, Container, Input } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trashIsWarning: false,\n      isEditing: false,\n      todoValue: this.props.task,\n      backButtonLit: false,\n    };\n    this.handleDelete = this.handleDelete.bind(this);\n    this.shadeRed = this.shadeRed.bind(this);\n    this.shadeBlue = this.shadeBlue.bind(this);\n    this.toggleEditMode = this.toggleEditMode.bind(this);\n    this.handleSubmitChange = this.handleSubmitChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.shadeGreen = this.shadeGreen.bind(this);\n    this.shadeNotGreen = this.shadeNotGreen.bind(this);\n  }\n  shadeNotGreen() {\n    this.setState({ backButtonLit: false });\n  }\n  shadeGreen() {\n    this.setState({ backButtonLit: true });\n  }\n  handleChange(evnt) {\n    this.setState((st) => ({\n      todoValue: evnt.target.value,\n    }));\n  }\n  handleSubmitChange() {\n    this.props.alterTodo(this.props.id, this.state.todoValue);\n    this.setState({ isEditing: false });\n  }\n  toggleEditMode() {\n    this.setState((st) => ({\n      isEditing: !st.isEditing,\n    }));\n  }\n  shadeBlue() {\n    this.setState({ trashIsWarning: false });\n  }\n  shadeRed() {\n    this.setState({ trashIsWarning: true });\n  }\n  handleDelete() {\n    this.props.delete(this.props.id);\n  }\n  render() {\n    return (\n      <Grid\n        marginTop=\"18px\"\n        marginBottom=\"11px\"\n        container\n        justifyContent=\"flex-end\"\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n\n        // justifyContent=\"center\"\n        // style={{ minHeight: \"100vh\" }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: { xs: \"column\", md: \"row\" },\n            alignItems: \"center\",\n          }}\n        >\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n\n              width: {\n                md: 300, // theme.breakpoints.up('md')\n                lg: 400, // theme.breakpoints.up('lg')\n                xl: 500, // theme.breakpoints.up('xl')\n              },\n              pt: 1,\n              pb: 1,\n              pl: 1,\n              pr: 1,\n              border: 0.5,\n              borderRadius: 3,\n              borderColor: \"blueviolet\",\n            }}\n          >\n            <Container\n              sx={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              {!this.state.isEditing ? (\n                <Grid sx={{ paddingTop: 0.5 }}>{this.props.task}</Grid>\n              ) : (\n                <form>\n                  <Input\n                    value={this.state.todoValue}\n                    name=\"change\"\n                    onChange={this.handleChange}\n                    sx={{ paddingTop: 0.5 }}\n                  ></Input>\n                </form>\n              )}\n              {!this.state.isEditing ? (\n                <Grid hover>\n                  <DeleteIcon\n                    color={this.state.trashIsWarning ? \"error\" : \"secondary\"}\n                    onMouseEnter={this.shadeRed}\n                    onMouseLeave={this.shadeBlue}\n                    onClick={this.handleDelete}\n                  />\n                  <EditIcon\n                    sx={{ paddingBottom: 0.25, paddingLeft: 1.5 }}\n                    fontSize=\"inherit\"\n                    color=\"primary\"\n                    onClick={this.toggleEditMode}\n                  />\n                </Grid>\n              ) : (\n                <Grid>\n                  <Grid hover>\n                    <ArrowBackIcon\n                      color={this.state.backButtonLit ? \"success\" : \"\"}\n                      onMouseEnter={this.shadeGreen}\n                      onMouseLeave={this.shadeNotGreen}\n                      onClick={this.toggleEditMode}\n                    />\n                  </Grid>\n                  <Grid hover>\n                    <ArrowForwardIcon\n                      sx={{ paddingTop: 1.4 }}\n                      color={this.state.trashIsWarning ? \"error\" : \"seagreen\"}\n                      onMouseEnter={this.shadeRed}\n                      onMouseLeave={this.shadeBlue}\n                      onClick={this.handleSubmitChange}\n                    />\n                  </Grid>\n                </Grid>\n              )}\n            </Container>\n          </Box>\n        </Box>\n      </Grid>\n    );\n  }\n}\nexport default Todo;\n","import * as React from \"react\";\nimport { useState } from \"react\";\n\nimport { Grid, TextField, Button } from \"@mui/material\";\n\nexport default function CreateNewTodo(props) {\n  const [todoValue, setTodoValue] = useState(\"\");\n  const handleChange = (evnt) => {\n    setTodoValue(evnt.target.value);\n  };\n\n  const handleSubmit = (evnt) => {\n    evnt.preventDefault();\n    props.addTodo(props.id, todoValue);\n    setTodoValue(\"\");\n  };\n  return (\n    <div>\n      <Grid\n        marginTop=\"30px\"\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        // justifyContent=\"center\"\n        // style={{ minHeight: \"100vh\" }}\n      >\n        <form>\n          <TextField\n            onChange={handleChange}\n            value={todoValue}\n            id=\"standard-basic\"\n            label=\"Create a to-do\"\n            color=\"secondary\"\n          />\n        </form>\n        <Button onClick={handleSubmit} variant=\"text\">\n          Submit\n        </Button>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Todo from \"./Todo\";\nimport CreateNewTodo from \"./CreateNewTodo\";\nimport { v4 as uuid } from \"uuid\";\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: JSON.parse(window.localStorage.getItem(\"todos\") || \"[]\"),\n    };\n    this.addTodo = this.addTodo.bind(this);\n    this.deleteThisTodo = this.deleteThisTodo.bind(this);\n    this.alterTodo = this.alterTodo.bind(this);\n  }\n  alterTodo(id, newContent) {\n    console.log(id, newContent);\n    this.setState((currState) => ({\n      todos: this.state.todos.map((t) => {\n        if (t.id === id) {\n          return { ...t, task: newContent };\n        }\n        return t;\n      }),\n    }));\n  }\n  deleteThisTodo(id) {\n    this.setState((currState) => ({\n      todos: currState.todos.filter((todo) => todo.id !== id),\n    }));\n  }\n  addTodo(id, todoContent) {\n    if (!todoContent) {\n      alert(\"you must have something in your todo in order to submit\");\n    } else {\n      const newTodo = { task: todoContent, id: uuid(), completed: false };\n      this.setState((currState) => ({\n        todos: [...currState.todos, newTodo],\n      }));\n    }\n  }\n  componentDidUpdate() {\n    window.localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\n  }\n  componentDidMount() {\n    console.log(\"mounted the component\");\n  }\n  render() {\n    let mappedTodos = this.state.todos.map((todo) => (\n      <Todo\n        delete={this.deleteThisTodo}\n        key={todo.id}\n        id={todo.id}\n        task={todo.task}\n        completed={todo.completed}\n        alterTodo={this.alterTodo}\n      />\n    ));\n    return (\n      <div>\n        <CreateNewTodo addTodo={this.addTodo} />\n        {mappedTodos}\n      </div>\n    );\n  }\n}\nexport default TodoList;\n","import * as React from \"react\";\n\nimport TodoList from \"./TodoList\";\n\nfunction App() {\n  return (\n    <div>\n      <TodoList />\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}